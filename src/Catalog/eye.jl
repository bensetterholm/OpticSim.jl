
module EYE
using StaticArrays
using OrderedCollections
using OpticSim.Catalog
using OpticSim.Materials: AbstractMaterial, Material, Conrady
export Eye

struct Eye <: AbstractMaterial
    Lmin::Float64
    Lmax::Float64
    n0::Float64
    A::Float64
    B::Float64
    Temp::Float64
    TransL::Vector{Float64}
    TransTr::Vector{Float64}
    TransTh::Vector{Float64}
    dPgF::Float64
    TCE::Float64
    Nd::Float64
    Vd::Float64
    p::Float64
end

function Material(eye::Eye)
    return Material(
        eye.Lmin,
        eye.Lmax,
        Conrady(eye.n0, eye.A, eye.B),
        zeros(6)...,
        eye.Temp,
        eye.TransL,
        eye.TransTr,
        eye.TransTh,
    )
end

_catalog = OrderedDict(
    :AQUEOUS => Eye(0.38, 0.78, 1.32107278, 0.00847113739, 0.000231825063, 20, [0.32, 0.334, 0.35, 0.365, 0.37, 0.38, 0.39, 0.4, 0.42, 0.46, 0.5, 0.66, 1.06, 1.529, 1.9701, 2.325], [0.16, 0.42, 0.7, 0.85, 0.88, 0.92, 0.95, 0.963, 0.977, 0.988, 0.993, 0.996, 0.996, 0.975, 0.93, 0.66], [25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0], 0, 0, 1.336981, 52.658991, 1),
    :LENS => Eye(0.38, 0.78, 1.4014679, 0.00938901135, 0.000393175776, 20, [0.32, 0.334, 0.35, 0.365, 0.37, 0.38, 0.39, 0.4, 0.42, 0.46, 0.5, 0.66, 1.06, 1.529, 1.9701, 2.325], [0.16, 0.42, 0.7, 0.85, 0.88, 0.92, 0.95, 0.963, 0.977, 0.988, 0.993, 0.996, 0.996, 0.975, 0.93, 0.66], [25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0], 0, 0, 1.419976, 51.226142, 1),
    :CORNEA => Eye(0.38, 0.78, 1.36313817, 0.00667127181, 0.000386916734, 20, [0.32, 0.334, 0.35, 0.365, 0.37, 0.38, 0.39, 0.4, 0.42, 0.46, 0.5, 0.66, 1.06, 1.529, 1.9701, 2.325], [0.16, 0.42, 0.7, 0.85, 0.88, 0.92, 0.95, 0.963, 0.977, 0.988, 0.993, 0.996, 0.996, 0.975, 0.93, 0.66], [25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0], 0, 0, 1.376981, 56.279936, 1),
    :VITREOUS => Eye(0.38, 0.78, 1.32238376, 0.00672767909, 0.000333967702, 20, [0.32, 0.334, 0.35, 0.365, 0.37, 0.38, 0.39, 0.4, 0.42, 0.46, 0.5, 0.66, 1.06, 1.529, 1.9701, 2.325], [0.16, 0.42, 0.7, 0.85, 0.88, 0.92, 0.95, 0.963, 0.977, 0.988, 0.993, 0.996, 0.996, 0.975, 0.93, 0.66], [25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0], 0, 0, 1.335982, 53.342173, 1),
)

for i in 1:length(_catalog)
    sym = _catalog.keys[i]
    id = Catalog.addGlass("EYE.$sym", _catalog.vals[i])
    :(const $sym = Catalog.GLASSES[Eye].vals[$id]) |> eval
    :(export $sym) |> eval
end
end